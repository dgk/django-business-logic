<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="215" errors="22" failures="0" skip="1"><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderArgumentFieldTest" name="test_argument_field_get" time="0.016"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderArgumentFieldTest" name="test_argument_field_set" time="0.034"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderAssignmentTest" name="test_assignment" time="0.032"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_add" time="0.025"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_and" time="0.019"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_div" time="0.021"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_eq" time="0.024"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_gt" time="0.017"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_gte" time="0.024"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_lt" time="0.022"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_lte" time="0.017"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_minus" time="0.021"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_mul" time="0.018"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_ne" time="0.021"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_or" time="0.022"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBinaryOperatorTest" name="test_operator_pow" time="0.017"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBlockTest" name="test_block" time="0.070"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderBlockTest" name="test_block_if_sequence" time="0.114"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderConstantTest" name="test_boolean_constant_false" time="0.009"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderConstantTest" name="test_boolean_constant_true" time="0.012"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderConstantTest" name="test_number_constant" time="0.010"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderConstantTest" name="test_string_constant" time="0.012"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderFunctionTest" name="test_function_with_args" time="0.018"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderFunctionTest" name="test_function_without_args" time="0.012"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_elif" time="0.079"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_elif_2" time="0.104"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_elif_else" time="0.093"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_if" time="0.069"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_if_else" time="0.075"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderIfStatementTest" name="test_if_not_variable_condition" time="0.077"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlBuilderReferenceConstantTest" name="test_reference_constant" time="0.021"></testcase><testcase classname="tests.blockly.test_build.BlocklyXmlDateTest" name="test_block_date" time="0.014"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorProgramVersionTest" name="test_create_should_check_program_version_type" time="0.066"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorProgramVersionTest" name="test_create_variable_definitions_should_check_program_variable_definitions_type" time="0.067"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorProgramVersionTest" name="test_create_variable_definitions_should_use_program_variable_definitions" time="0.070"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_collect_objects" time="0.029"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_assignment" time="0.078"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_content_object" time="0.037"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_content_object_sould_not_create_variable_definition" time="0.027"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_date" time="0.080"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_function" time="0.057"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_reference_constant" time="0.044"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_create_variable_definitions" time="0.033"></testcase><testcase classname="tests.blockly.test_create.NodeTreeCreatorTest" name="test_test_case_diff" time="0.109"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserArgumentFieldTest" name="test_argument_field_get" time="0.020"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserArgumentFieldTest" name="test_argument_field_set" time="0.054"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserAssignmentTest" name="test_assignment" time="0.035"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_add" time="0.018"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_and" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_div" time="0.017"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_eq" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_gt" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_gte" time="0.017"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_lt" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_lte" time="0.017"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_minus" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_mul" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_ne" time="0.018"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_or" time="0.022"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBinaryOperatorTest" name="test_operator_pow" time="0.018"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserBlockTest" name="test_parese_assignment_block" time="0.074"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserConstantTest" name="test_boolean_constant" time="0.021"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserConstantTest" name="test_date_constantant" time="0.012"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserConstantTest" name="test_number_constantant" time="0.010"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserConstantTest" name="test_string_constant" time="0.009"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserFunctionTest" name="test_parse_function" time="0.024"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserIfStatementTest" name="test_elif_else" time="0.095"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserIfStatementTest" name="test_if" time="0.068"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserReferenceConstantTest" name="test_reference_constant" time="0.003"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserShadowTest" name="test_shadow_parse" time="0.001"></testcase><testcase classname="tests.blockly.test_parse.BlocklyXmlParserShadowTest" name="test_shadow_replaced_parse" time="0.001"></testcase><testcase classname="tests.rest.test_log.ExecutionRestTest" name="test_execution_item" time="0.262"><error type="builtins.ImportError" message="cannot import name 'DjangoFilterBackend'"><![CDATA[Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_log.py", line 32, in test_execution_item
    url = reverse('business-logic:rest:execution', kwargs=dict(pk=Execution.objects.get().id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 60, in reverse
    app_list = resolver.app_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 348, in app_dict
    self._populate()
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 288, in _populate
    for pattern in reversed(self.url_patterns):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 405, in url_patterns
    patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/utils/functional.py", line 35, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 398, in urlconf_module
    return import_module(self.urlconf_name)
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "/home/vf/projects/django-business-logic/sites/test/urls.py", line 6, in <module>
    url('^business-logic/', include('business_logic.urls')),
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/conf/urls/__init__.py", line 50, in include
    urlconf_module = import_module(urlconf_module)
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 978, in _gcd_import
  File "<frozen importlib._bootstrap>", line 961, in _find_and_load
  File "<frozen importlib._bootstrap>", line 950, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 655, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 678, in exec_module
  File "<frozen importlib._bootstrap>", line 205, in _call_with_frames_removed
  File "/home/vf/projects/django-business-logic/business_logic/urls.py", line 4, in <module>
    from .rest import urls
  File "/home/vf/projects/django-business-logic/business_logic/rest/urls.py", line 4, in <module>
    from .views import *
  File "/home/vf/projects/django-business-logic/business_logic/rest/views.py", line 22, in <module>
    from rest_framework.filters import DjangoFilterBackend, SearchFilter
ImportError: cannot import name 'DjangoFilterBackend'
]]></error></testcase><testcase classname="tests.rest.test_log.ExecutionRestTest" name="test_execution_list" time="0.103"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_log.py", line 22, in test_execution_list
    url = reverse('business-logic:rest:execution-list')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_log.ExecutionRestTest" name="test_execution_list_empty" time="0.105"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_log.py", line 14, in test_execution_list_empty
    url = reverse('business-logic:rest:execution-list')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_log.LogRestTest" name="test_log" time="0.103"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_log.py", line 55, in test_log
    url = reverse('business-logic:rest:log', kwargs=dict(execution__id=Execution.objects.get().id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_interface.ProgramInterfaceTest" name="test_program_interface_list" time="0.044"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_interface.py", line 8, in test_program_interface_list
    url = reverse('business-logic:rest:program-interface-list')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_interface.ProgramInterfaceTest" name="test_program_interface_view" time="0.040"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_interface.py", line 18, in test_program_interface_view
    url = reverse('business-logic:rest:program-interface', kwargs={'pk': self.program_interface.id})
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_version.ProgramVersionRESTTest" name="test_program_version_create" time="0.031"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_version.py", line 22, in test_program_version_create
    url = reverse('business-logic:rest:program-version-create')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_version.ProgramVersionRESTTest" name="test_program_version_update" time="0.031"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_version.py", line 55, in test_program_version_update
    url = reverse('business-logic:rest:program-version', kwargs=dict(pk=self.program_version.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_version.ProgramVersionRESTTest" name="test_program_version_update_should_validate_empty_xml" time="0.030"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_version.py", line 85, in test_program_version_update_should_validate_empty_xml
    url = reverse('business-logic:rest:program-version', kwargs=dict(pk=self.program_version.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_version.ProgramVersionRESTTest" name="test_program_version_update_should_validate_xml" time="0.031"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_version.py", line 76, in test_program_version_update_should_validate_xml
    url = reverse('business-logic:rest:program-version', kwargs=dict(pk=self.program_version.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_program_version.ProgramVersionRESTTest" name="test_program_version_view" time="0.031"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_program_version.py", line 35, in test_program_version_view
    url = reverse('business-logic:rest:program-version', kwargs=dict(pk=self.program_version.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceDescriptorTest" name="test_notexists_model_not_found" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 36, in test_notexists_model_not_found
    url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceDescriptorTest" name="test_reference_descriptor_list" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 15, in test_reference_descriptor_list
    url = reverse('business-logic:rest:reference-descriptor-list')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceDescriptorTest" name="test_unregistered_reference_list_not_found" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 30, in test_unregistered_reference_list_not_found
    url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceListTest" name="test_reference_list" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 49, in setUp
    self.url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceListTest" name="test_reference_list_search" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 49, in setUp
    self.url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceListTest" name="test_reference_list_search_not_configured" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 49, in setUp
    self.url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceListTest" name="test_reference_list_search_related_fields" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 49, in setUp
    self.url = reverse('business-logic:rest:reference-list', kwargs=dict(model=model))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceViewTest" name="test_reference_view" time="0.002"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 107, in setUp
    self.url = reverse('business-logic:rest:reference', kwargs=dict(model=model, pk=self.test_model.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_reference.ReferenceViewTest" name="test_reference_view_name_field" time="0.002"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 601, in run
    self.setUp()
  File "/home/vf/projects/django-business-logic/tests/rest/test_reference.py", line 107, in setUp
    self.url = reverse('business-logic:rest:reference', kwargs=dict(model=model, pk=self.test_model.id))
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.rest.test_urls.RestTestCase" name="test_urls" time="0.001"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/rest/test_urls.py", line 7, in test_urls
    url = reverse('business-logic:rest:root')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.test_assignment.AssignmentTest" name="test_assignment" time="0.049"></testcase><testcase classname="tests.test_assignment.AssignmentTest" name="test_var_assignment" time="0.059"></testcase><testcase classname="tests.test_constant.ConstantTest" name="test_init" time="0.001"></testcase><testcase classname="tests.test_constant.ConstantTest" name="test_interpret" time="0.001"></testcase><testcase classname="tests.test_constant.ConstantTest" name="test_str" time="0.000"></testcase><testcase classname="tests.test_context.ContextTest" name="test_default_init" time="0.001"></testcase><testcase classname="tests.test_context.ContextTest" name="test_init" time="0.001"></testcase><testcase classname="tests.test_context.ContextTest" name="test_init_args_check" time="0.001"></testcase><testcase classname="tests.test_frame.FrameTest" name="test_context_init" time="0.001"></testcase><testcase classname="tests.test_frame.FrameTest" name="test_single_expression" time="0.034"></testcase><testcase classname="tests.test_frame.FrameTest" name="test_switch_frames" time="0.055"></testcase><testcase classname="tests.test_function.PythonCodeFunctionTest" name="test_arguments" time="0.039"></testcase><testcase classname="tests.test_function.PythonCodeFunctionTest" name="test_context_in_function" time="0.034"></testcase><testcase classname="tests.test_function.PythonModuleFunctionTest" name="test_builtins" time="0.026"></testcase><testcase classname="tests.test_function.PythonModuleFunctionTest" name="test_builtins_if_empty_module" time="0.024"></testcase><testcase classname="tests.test_function.PythonModuleFunctionTest" name="test_context_in_function" time="0.027"></testcase><testcase classname="tests.test_function.PythonModuleFunctionTest" name="test_import" time="0.027"></testcase><testcase classname="tests.test_ifstatement.IfStatementTest" name="test_interpret_elif" time="0.078"></testcase><testcase classname="tests.test_ifstatement.IfStatementTest" name="test_interpret_elif_2" time="0.097"></testcase><testcase classname="tests.test_ifstatement.IfStatementTest" name="test_interpret_if" time="0.069"></testcase><testcase classname="tests.test_ifstatement.IfStatementTest" name="test_interpret_if_else" time="0.078"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_block" time="0.097"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_current_long_values" time="0.036"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_disabled" time="0.024"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_exception" time="0.041"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_previous_long_values" time="0.035"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_tree" time="0.047"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_values" time="0.047"></testcase><testcase classname="tests.test_log.LogTest" name="test_log_variable_undefined" time="0.044"></testcase><testcase classname="tests.test_log.LogTest" name="test_logger" time="0.001"></testcase><testcase classname="tests.test_log.ProgramTest" name="test_empty_execution" time="0.063"></testcase><testcase classname="tests.test_log.ProgramTest" name="test_execution" time="0.110"></testcase><testcase classname="tests.test_log.ProgramTest" name="test_execution_empty_log" time="0.069"></testcase><testcase classname="tests.test_node.NodeCacheTest" name="test_content_object_node_accessor" time="0.022"></testcase><testcase classname="tests.test_node.NodeCacheTest" name="test_init_node_in_cache" time="0.024"></testcase><testcase classname="tests.test_node.NodeCacheTest" name="test_medium_tree_cache" time="0.044"></testcase><testcase classname="tests.test_node.NodeCacheTest" name="test_simple_tree_cache" time="0.026"></testcase><testcase classname="tests.test_node.NodeInterpretExceptionTest" name="create_test_tree" time="0.032"></testcase><testcase classname="tests.test_node.NodeInterpretExceptionTest" name="test_interpret_should_handle_exception" time="0.021"></testcase><testcase classname="tests.test_node.NodeInterpretExceptionTest" name="test_interpret_should_handle_exception_and_continue_interpretation" time="0.046"></testcase><testcase classname="tests.test_node.NodeInterpretExceptionTest" name="test_interpret_should_handle_exception_and_interrrupt_interpretation" time="0.044"></testcase><testcase classname="tests.test_node.NodeInterpretTest" name="test_interpret_3" time="0.021"></testcase><testcase classname="tests.test_node.NodeInterpretTest" name="test_interpret_block_should_return_none" time="0.071"></testcase><testcase classname="tests.test_node.NodeInterpretTest" name="test_interpret_tree" time="0.025"></testcase><testcase classname="tests.test_node.NodeInterpretTest" name="test_symmetric_tree" time="0.059"></testcase><testcase classname="tests.test_node.NodeTest" name="test_add_child" time="0.010"></testcase><testcase classname="tests.test_node.NodeTest" name="test_add_root" time="0.011"></testcase><testcase classname="tests.test_node.NodeTest" name="test_content_object_node_accessor" time="0.012"></testcase><testcase classname="tests.test_node.NodeTest" name="test_delete_with_lost_content_object" time="0.026"></testcase><testcase classname="tests.test_node.NodeTest" name="test_node_deletion_should_not_delete_content_objects_from_other_apps" time="0.031"></testcase><testcase classname="tests.test_node.NodeTest" name="test_recursive_delete" time="0.049"></testcase><testcase classname="tests.test_node.NodeTest" name="test_statement_or_block" time="0.021"></testcase><testcase classname="tests.test_node.NodeTest" name="test_traverse" time="0.036"></testcase><testcase classname="tests.test_node.NodeTest" name="test_tree" time="0.013"></testcase><testcase classname="tests.test_node.NodeTest" name="test_tree_1plus2mul3" time="0.029"></testcase><testcase classname="tests.test_node.NodeTest" name="test_tree_clone" time="0.000"><skipped type="unittest.case.SkipTest" message="TODO: Node.clone() not properly implemented"><![CDATA[Exception: TODO: Node.clone() not properly implemented
]]></skipped></testcase><testcase classname="tests.test_operator.BinaryOperatorDecimalOperandTest" name="test_interpret_div" time="0.058"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_init" time="0.000"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_add" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_div" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_mod" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_mul" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_pow" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_interpret_sub" time="0.001"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_raise_on_incorrect_operator" time="0.000"></testcase><testcase classname="tests.test_operator.BinaryOperatorTest" name="test_str" time="0.000"></testcase><testcase classname="tests.test_operator.UnaryOperatorTest" name="test_init" time="0.000"></testcase><testcase classname="tests.test_operator.UnaryOperatorTest" name="test_interpret_neg" time="0.001"></testcase><testcase classname="tests.test_operator.UnaryOperatorTest" name="test_str" time="0.000"></testcase><testcase classname="tests.test_program.ProgramAdminTest" name="test_programinterface_changelist" time="0.151"><error type="django.urls.exceptions.NoReverseMatch" message="'en-us' is not a registered namespace"><![CDATA[Traceback (most recent call last):
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 77, in reverse
    extra, resolver = resolver.namespace_dict[ns]
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/resolvers.py", line 342, in namespace_dict
    return self._namespace_dict[language_code]
KeyError: 'en-us'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib64/python3.6/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib64/python3.6/unittest/case.py", line 605, in run
    testMethod()
  File "/home/vf/projects/django-business-logic/tests/test_program.py", line 158, in test_programinterface_changelist
    url = reverse('admin:business_logic_programinterface_changelist')
  File "/home/vf/projects/django-business-logic/venv/lib/python3.6/site-packages/django/urls/base.py", line 87, in reverse
    raise NoReverseMatch("%s is not a registered namespace" % key)
django.urls.exceptions.NoReverseMatch: 'en-us' is not a registered namespace
]]></error></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_deletion_should_delete_field" time="0.093"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_deletion_should_delete_variable_definition" time="0.091"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_field_deletion_should_delete_variable_definition" time="0.048"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_field_title_declared" time="0.041"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_field_title_generated" time="0.041"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_field_variable_definition" time="0.043"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_argument_variable_definition" time="0.040"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_execute" time="0.065"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_version_execute_args_check" time="0.058"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_version_execute_get_variable_recursive" time="0.072"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_version_execute_set_reference_variable" time="0.078"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_program_version_execute_set_variable" time="0.071"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_recursive_get_variable_should_returns_undefined_if_parent_field_undefined" time="0.074"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_save_program_argument_change_field_variable_definition" time="0.064"></testcase><testcase classname="tests.test_program.ProgramTest" name="test_save_program_argument_change_variable_definition" time="0.064"></testcase><testcase classname="tests.test_reference.ReferenceConstantTest" name="test_interpret" time="0.018"></testcase><testcase classname="tests.test_reference.ReferenceConstantTest" name="test_operator_eq_equals" time="0.039"></testcase><testcase classname="tests.test_reference.ReferenceConstantTest" name="test_operator_eq_not_equals" time="0.040"></testcase><testcase classname="tests.test_reference.ReferenceDescriptorTest" name="test_reference_descriptor_search_fields_empty" time="0.001"></testcase><testcase classname="tests.test_reference.ReferenceDescriptorTest" name="test_reference_descriptor_search_fields_split" time="0.001"></testcase><testcase classname="tests.test_signals.SignalsTest" name="test_block_interpret_enter" time="0.006"></testcase><testcase classname="tests.test_signals.SignalsTest" name="test_block_interpret_leave" time="0.009"></testcase><testcase classname="tests.test_signals.SignalsTest" name="test_interpret_enter" time="0.006"></testcase><testcase classname="tests.test_signals.SignalsTest" name="test_interpret_leave" time="0.010"></testcase><testcase classname="tests.test_stop.StopTest" name="test_block" time="0.036"></testcase><testcase classname="tests.test_stop.StopTest" name="test_nesting" time="0.037"></testcase><testcase classname="tests.test_variable.VariableTest" name="test_definition" time="0.013"></testcase><testcase classname="tests.test_variable.VariableTest" name="test_get_variable_returns_recursive_attribute" time="0.003"></testcase><testcase classname="tests.test_variable.VariableTest" name="test_get_variable_returns_recursive_attribute_undefined" time="0.004"></testcase><testcase classname="tests.test_variable.VariableTest" name="test_get_variable_returns_variable_undefined" time="0.012"></testcase><testcase classname="tests.test_variable.VariableTest" name="test_variable_undefined" time="0.000"></testcase><testcase classname="tests.blockly.test_build" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.blockly.test_create" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.blockly.test_parse" name="get_test_tree" time="0.038"></testcase><testcase classname="tests.rest.test_log" name="get_test_tree" time="0.032"></testcase><testcase classname="tests.rest.test_program_interface" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.rest.test_program_version" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.rest.test_reference" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.rest.test_urls" name="get_test_tree" time="0.028"></testcase><testcase classname="tests.test_assignment" name="get_test_tree" time="0.030"></testcase><testcase classname="tests.test_constant" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_context" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_frame" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_function" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_ifstatement" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_log" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_node" name="get_test_tree" time="0.032"></testcase><testcase classname="tests.test_operator" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_program" name="get_test_tree" time="0.031"></testcase><testcase classname="tests.test_reference" name="get_test_tree" time="0.032"></testcase><testcase classname="tests.test_signals" name="get_test_tree" time="0.035"></testcase><testcase classname="tests.test_stop" name="get_test_tree" time="0.033"></testcase><testcase classname="tests.test_variable" name="get_test_tree" time="0.033"></testcase></testsuite>